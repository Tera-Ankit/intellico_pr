{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AmalJojo\\\\Documents\\\\intellico\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to store folder path and message\n  const [folderPath, setFolderPath] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // Success/Error messages\n  const [isFolderSelected, setIsFolderSelected] = useState(false); // Track if folder is selected\n\n  // Handle manual folder path input\n  const handleFolderChange = event => {\n    setFolderPath(event.target.value);\n    setIsFolderSelected(false); // Reset folder selection state when user types\n  };\n\n  // Handle folder selection via file input\n  const handleFolderSelect = event => {\n    const selectedFolder = event.target.files[0];\n    if (selectedFolder) {\n      // Extract folder name from the path (for multiple files, you'd want a more robust solution)\n      const folderName = selectedFolder.webkitRelativePath.split('/')[0];\n      setFolderPath(folderName); // Update folder path to the folder name\n      setIsFolderSelected(true); // Indicate that a folder is selected\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async () => {\n    if (!folderPath) {\n      setMessage(\"Please select or enter a folder path.\");\n      return;\n    }\n    try {\n      // Send the folder path to the FastAPI backend\n      const response = await fetch(\"http://127.0.0.1:8000/run-script/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          folder_path: folderPath\n        }) // Send folder path as JSON\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Success response\n        setMessage(data.message);\n        console.log(\"Script Output:\", data.output);\n      } else {\n        // Error response\n        setMessage(data.detail || \"Error running script\");\n      }\n    } catch (error) {\n      // Handle network or other errors\n      setMessage(\"An error occurred: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Intellico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Choose one of the following methods to provide the folder path:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"folder-path\",\n        children: \"Enter Folder Path:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"folder-path\",\n        value: folderPath,\n        onChange: handleFolderChange,\n        placeholder: \"Enter the folder path here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `folder-select-label ${isFolderSelected ? 'inactive' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `folder-icon ${isFolderSelected ? 'inactive-icon' : ''}`,\n          children: \"\\uD83D\\uDCC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `folder-text ${isFolderSelected ? 'inactive-text' : ''}`,\n          children: \"Or Select Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"folder-select\",\n        webkitdirectory: \"true\",\n        onChange: handleFolderSelect,\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => document.getElementById(\"folder-select\").click(),\n        className: \"select-button\",\n        disabled: isFolderSelected,\n        children: \"Select Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), isFolderSelected && folderPath && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Selected Folder:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 14\n        }, this), \" \", folderPath]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"Submit Folder Path\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0JiVXwrx6hVR8nBdwazIHeWo7OE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","folderPath","setFolderPath","message","setMessage","isFolderSelected","setIsFolderSelected","handleFolderChange","event","target","value","handleFolderSelect","selectedFolder","files","folderName","webkitRelativePath","split","handleSubmit","response","fetch","method","headers","body","JSON","stringify","folder_path","data","json","ok","console","log","output","detail","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","webkitdirectory","style","display","onClick","document","getElementById","click","disabled","_c","$RefreshReg$"],"sources":["C:/Users/AmalJojo/Documents/intellico/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  // State to store folder path and message\n  const [folderPath, setFolderPath] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // Success/Error messages\n  const [isFolderSelected, setIsFolderSelected] = useState(false); // Track if folder is selected\n\n  // Handle manual folder path input\n  const handleFolderChange = (event) => {\n    setFolderPath(event.target.value);\n    setIsFolderSelected(false); // Reset folder selection state when user types\n  };\n\n  // Handle folder selection via file input\n  const handleFolderSelect = (event) => {\n    const selectedFolder = event.target.files[0];\n    if (selectedFolder) {\n      // Extract folder name from the path (for multiple files, you'd want a more robust solution)\n      const folderName = selectedFolder.webkitRelativePath.split('/')[0];\n      setFolderPath(folderName); // Update folder path to the folder name\n      setIsFolderSelected(true); // Indicate that a folder is selected\n    }\n  };\n  \n\n  // Handle form submission\n  const handleSubmit = async () => {\n    if (!folderPath) {\n      setMessage(\"Please select or enter a folder path.\");\n      return;\n    }\n  \n    try {\n      // Send the folder path to the FastAPI backend\n      const response = await fetch(\"http://127.0.0.1:8000/run-script/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ folder_path: folderPath }), // Send folder path as JSON\n      });\n  \n      const data = await response.json();\n      if (response.ok) {\n        // Success response\n        setMessage(data.message);\n        console.log(\"Script Output:\", data.output);\n      } else {\n        // Error response\n        setMessage(data.detail || \"Error running script\");\n      }\n    } catch (error) {\n      // Handle network or other errors\n      setMessage(\"An error occurred: \" + error.message);\n    }\n  };\n  \n\n  return (\n    <div className=\"App\">\n      <h1>Intellico</h1>\n\n      {/* Instructions */}\n      <p>Choose one of the following methods to provide the folder path:</p>\n\n      {/* Manual Folder Path Input */}\n      <div className=\"folder-input\">\n        <label htmlFor=\"folder-path\">Enter Folder Path:</label>\n        <input\n          type=\"text\"\n          id=\"folder-path\"\n          value={folderPath}\n          onChange={handleFolderChange}\n          placeholder=\"Enter the folder path here\"\n        />\n      </div>\n\n      {/* Folder Selection via File Input */}\n      <div className=\"folder-input\">\n        <div className={`folder-select-label ${isFolderSelected ? 'inactive' : ''}`}>\n          <i className={`folder-icon ${isFolderSelected ? 'inactive-icon' : ''}`}>\n            &#128193;\n          </i>\n          <span className={`folder-text ${isFolderSelected ? 'inactive-text' : ''}`}>\n            Or Select Folder\n          </span>\n        </div>\n        <input\n          type=\"file\"\n          id=\"folder-select\"\n          webkitdirectory=\"true\"\n          onChange={handleFolderSelect}\n          style={{ display: \"none\" }}\n        />\n        <button\n          onClick={() => document.getElementById(\"folder-select\").click()}\n          className=\"select-button\"\n          disabled={isFolderSelected}\n        >\n          Select Folder\n        </button>\n      </div>\n\n\n\n      {/* Display selected folder */}\n      {isFolderSelected && folderPath && (\n        <div className=\"folder-preview\">\n          <p><strong>Selected Folder:</strong> {folderPath}</p>\n        </div>\n      )}\n\n      {/* Submit Button */}\n      <button className=\"submit-button\" onClick={handleSubmit}>\n        Submit Folder Path\n      </button>\n\n      {/* Message Area */}\n      {message && <p className=\"message\">{message}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}